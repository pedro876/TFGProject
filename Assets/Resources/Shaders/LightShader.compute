
#pragma kernel CSMain

Texture2D<float4> DepthTex;
Texture2D<float4> NormalTex;
RWTexture2D<float4> ResultTex;
float fog;
float power;
float3 lightDir;

[numthreads(16,16,1)]
void CSMain (uint3 id : SV_DispatchThreadID)
{
    float4 depthColor = DepthTex[id.xy];
    float4 normalColor = NormalTex[id.xy];
    float landed = depthColor.y > 0.5f;
    float3 normal = normalize(normalColor.xyz * 2 - 1);
    float dotValue = pow(clamp(dot(-normal, lightDir), 0, 1), 2) * 0.8 + 0.1;

    float4 finalColor = float4(dotValue, dotValue, dotValue, 1);
    finalColor = finalColor * (1-fog) + lerp(finalColor, float4(1, 1, 1, 1), pow(abs(depthColor.x), power)) * fog;
    finalColor = finalColor* (float4(0.48, 0.54, 0.82, 1)+0.5) * landed + float4(1, 1, 1, 1) * (1 - landed);

    ResultTex[id.xy] = finalColor;
}
